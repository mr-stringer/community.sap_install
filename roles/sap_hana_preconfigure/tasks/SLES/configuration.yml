---

#- name: Enable Debugging
#  debug:
#    verbosity: "{{ debuglevel }}"
#
- name: Ensure conflicting services are stopped and disabled
  ansible.builtin.systemd:
    name: "{{ service }}"
    state: stopped
    enabled: no
  loop: "{{ sap_hana_preconfigure_saptune_conflicting_services }}"
  loop_control:
    loop_var: service

- name: Ensure saptune is running and enabled
  ansible.builtin.systemd:
    name: saptune
    state: started
    enabled: yes

- name: Ensure saptune_check executes correctly
  ansible.builtin.command: saptune_check
  changed_when: no

- name: Discover active solution
  ansible.builtin.command: saptune solution enabled
  register: __sap_hana_preconfigure_register_saptune_status
  changed_when: no

- name: Set fact for active solution
  ansible.builtin.set_fact:
    __sap_hana_preconfigure_solution_configured: "{{ (__sap_hana_preconfigure_register_saptune_status.stdout | regex_search('(\\S+)', '\\1'))[0] | default('NONE') }}" # Capture the first block on none whitespace

- name: Show configured solution
  ansible.builtin.debug:
    var: __sap_hana_preconfigure_solution_configured

# If this is a cluster node on Azure, we need to override to disable tcp timestamps, reuse and recycle.
# This can be done by copying the sapnote file 2382421 from /usr/share/saptune/notes to /etc/saptune/override
# The value can then override in the in the new file

- name: Disable TCP timestamps, recycle & reuse
  ansible.builtin.blockinfile:
    path: /etc/saptune/override/2382421
    create: yes
    backup: yes
    owner: root
    group: root
    mode: '0640'
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
     [sysctl]
     net.ipv4.tcp_timestamps = 0
     net.ipv4.tcp_tw_reuse = 0
     net.ipv4.tcp_tw_recycle = 0
  when: 
    - sap_hana_preconfigure_saptune_azure

- name: Check if saptune solution needs to be applied
  ansible.builtin.command: "saptune solution verify {{ sap_hana_preconfigure_saptune_solution }}"
  register: __sap_hana_preconfigure_register_saptune_verify
  changed_when: no # We're only checking, not changing!
  failed_when: no # We expect this to fail if it has not previously been applied

- name: Ensure no solution is currently applied
  ansible.builtin.command: "saptune solution revert {{ __sap_hana_preconfigure_solution_configured }}"
  when: 
    - __sap_hana_preconfigure_solution_configured != 'NONE'
    - __sap_hana_preconfigure_register_saptune_verify.rc != 0

- name: Ensure saptune solution is applied
  ansible.builtin.command: "saptune solution apply {{ sap_hana_preconfigure_saptune_solution }}"
  when: __sap_hana_preconfigure_register_saptune_verify.rc != 0

- name: Ensure solution was successful 
  ansible.builtin.command: "saptune solution verify {{ sap_hana_preconfigure_saptune_solution }}"
  changed_when: no # We're only checking, not changing!    


